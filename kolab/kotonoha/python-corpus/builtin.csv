#Python,PJ
abs,{}の絶対値
all,{}が全てが真かどうか
any,{}が少なくともひとつは真かどうか
ascii
bin,{}の2進数文字列
bool,論理値
bool,{}の論理値
breakpoint
bytearray,{}のバイト列
bytes,{}のバイト列
callable
chr,文字コード{}の文字
classmethod,
compile
complex,{}の複素数,
complex,{}を実部、{}を虚部とした複素数
delattr,{}の{}属性を削除する
dict,辞書
dir,{}のシンボル一覧
divmod,{}と{}を割ったときの(商,剰余)の組
enumerate,{}に番号付した組の列
enumerate#start=,{}を開始番号として
eval, 文字列{}を評価した値
exec
filter,{1}の各値を{0}でフィルターした列 
format,書式{}を{}でフォーマットした文字列
frozenset,イミュータブルな集合
frozenset,{}のイミュータブルな集合
getattr,{}の{}プロパティの値
globals,グローバル変数の辞書
hasattr,{}が{}プロパティを持っているかどうか
hash,{}のハッシュ値
help
hex,{}の16進文字列
id,{}のオブジェクト識別子
input,入力された文字列
input,メッセージ{}に対して入力された文字列
isinstance,{}は{}型かどうか
issubclass,{}クラスは{}のサブクラスかどうか
iter
len,{}の長さ
list,{}のリスト
locals,ローカル変数の辞書
map,{1}の各要素に{0}を適用した列
max,{}の最大値
memoryview,
min,{}の最小値
next
object,オブジェクト
oct,{}の8進表記
open,{}を開いたファイルストリーム
open#mode='r',読み込みモードで
open#mode='w',書き込みモードで
open#mode='a',追記モードで
ord,{}の順序数
pow,{}の{}乗
pow,{}の{}乗に対する{}の剰余
property
print,{}を出力する
print,空行を出力する
print#sep=,{}を区切りとして
print#sep='',区切りなしで
print#end=,{}を代わりの行末として
print#end='',改行せずに
sep,セパレータ
repr,{}のリテラル
reversed,{}を反転した列
round,{}を四捨五入した整数値
setattr,{}のプロパティ{}を{}にする
slice,
sorted,{}をソートした列
sorted#reverse=True,逆順に
sorted#key=,{}をキーとして
staticmethod,
sum,{}の総和
super
tuple,{}の組
type,{}の型
vars
zip,{}の要素をそれぞれ組にした列
range,0から{}未満までの数列
range,{}から{}未満までの数列
range,{}から{}未満までの{}間隔の数列
#int
int,整数
int,{}の整数値
int,{1}進表記{0}の整数値
.bit_length,{}のビット長
.to_bytes,{}のバイト列
byteorder='big',ビッグエンディアンとして
byteorder='little',リトルエンディアンとして
int.from_bytes,バイト列{}からの整数値
#float
float,浮動小数点数
float,{}の浮動小数点数
.is_integer,{}が整数かどうか
.hex,{}の16進表記の文字列
float.fromhex,{}からの浮動小数点数
#set
set,集合
set,{}の集合
.add,{}に{}を追加した集まり
.remove,{}から{}を取り除いた集まり
.union,{}と{}の和集合
.intersection,{}と{}の共通部分
.difference,{}と{}の差
.symmetric_difference,{}と{}の対称差
.issubset,{}が{}の部分集合かどうか
.issuperset,{}が{}の上位集合かどうか
.isdisjoint,{}が{}と互いに素かどうか
#str
str,整数
str,{}の文字列
encoding=,{}をエンコーディングとして
.upper,{}を英大文字に変換した文字列
.isupper,{}の全てが英大文字かどうか
.lower,{}を英小文字に変換した文字列
.islower,{}の全てが英小文字かどうか
.capitalize,{}の先頭を英大文字、残りを全て英小文字に変換した文字列
.strswap,{}の英大小文字を交換した文字列
.swapcase,{}の英大小文字を交換した文字列
.find,{0}の先頭から{1}を探して見つかった位置
.find,{0}の位置{2}から{1}を探して見つかった位置
.rfind,{0}の末尾から{1}を逆順に探して見つかった位置
.rfind,{0}の位置{2}から{1}を逆順に探して見つかった位置
.count,{0}内の{1}の出現回数
#.count,{0}の位置{2}から末尾までの範囲において{1}の出現数
#.count,{0}の位置{2}から{3}までの範囲において{1}の出現数
.split,{0}を空白で分割した字句列
.split,{0}を{1}で分割した字句列
.split,{0}を{1}で最大分割数{2}まで分割した字句列
.rsplit,{0}を末尾から空白で分割した字句列
.rsplit,{0}を末尾から{1}で分割した字句列
.rsplit,{0}を末尾から{1}で最大分割数{2}まで分割した字句列
.join,{0}を間に入れて{1}を連結した文字列
.replace,{0}内の{1}を{2}で置き換えた文字列
.strip,{}の両端から空白改行を取り除いた文字列
.lstrip,{}の先頭から空白改行を取り除いた文字列
.rstrip,{}の末尾から空白改行を取り除いた文字列
.strip,{}の両端から{}を取り除いた文字列
.lstrip,{}の先頭から{}を取り除いた文字列
.rstrip,{}の末尾から{}を取り除いた文字列
.zfill,{}を長さ{}になるように'0'左詰めした文字列
.startswith,{0}の先頭が{1}で始まるかどうか
.startswith,{0}の位置{2}が{1}で始まるかどうか
.endswith,{0}の末尾が{1}で終わるかどうか
.endswith,{0}の位置{2}が{1}で終わるかどうか
.format,{}を書式として{}で整形した文字列
.isalpha,{0}が全てアルファベットかどうか
.isalnum,{0}が全て英数字かどうか
.isascii,{0}が全てASCII文字かどうか
.isdigit,{0}が全て数字かどうか
.isdecimal,{0}が全て数字かどうか
.isnumeric,{0}が全て数字かどうか
.isidentifier,{0}が識別子として利用可能かどうか
.isprintable,{}が印字可能かどうか
.append,{}の末尾に{}を追加する
.extend,{1}を追加して{0}を拡張する
.insert,{}の{}に{}を挿入する
.remove,{}内の{}と等しい要素を取り除く
.pop,{}の先頭を取り出した値
.pop,{}の{}を取り出した値
.clear,{}内の全ての要素を取り除く
.index,{}の{}と等しい要素の最初の位置
.index,{0}の{2}からの範囲内での{1}と等しい要素の最初の位置
.index,{0}の{2}から{3}までの範囲内での{1}と等しい要素の最初の位置
.sort,{}をソートする
.sort#key,{}をキーとして
.sort#reverse=True,逆順に
.reverse,{}を逆順にする
.copy,{}のコピー
.get,{}に対応する値
.get,{}に対応する値、もし存在しなければ{}
.keys,{}のキーの集まり
.values,{}の値の集まり
.items,{}のキーと値の集まり
.update,{1}を追加して{0}を更新する
.read,{}から読み込んだデータ
.read,{}から読み込んだ大きさ{}のデータ
.readline,{}から読み込んだ一行
.readlines,{}から読み込んだ行の列
.write,{}に{}を書き込む
__class__,クラス定義
__name__,識別子
__file__,このスクリプトがあるファイルパス
.apply,{}に{}を適用した結果


