#Python,PJ
random,random
random.random,0.0〜1.0の乱数
random.choice,{}からランダムに選んだ要素
random.shuffle,{}をランダムにシャッフルする
random.sample,{}からサンプル選出した列
random.sample,{}から{}個、サンプル選出した列
random.randrange,0から{}未満までの整数乱数
random.randrange,{}から{}未満までの整数乱数
random.randint,{}〜{}の整数乱数
random.seed,乱数生成を初期化する
random.seed,{}をシードとして乱数生成を初期化する
copy,copy
copy,{}をコピーした結果
copy.deepcopy,{}を深くコピーした結果
copy.copy,{}をコピーした結果
bisect,bisect
bisect.bisect_left,ソートされた順序を保ったまま{1}を{0}に挿入できる位置
bisect.bisect_left,ソートされた順序を保ったまま{1}を{2}から{3}までの範囲で{0}に挿入できる位置
bisect.bisect_right,ソートされた順序を保ったまま{1}を{0}に挿入できる最後の位置
bisect.bisect_right,ソートされた順序を保ったまま{1}を{2}から{3}までの範囲で{0}に挿入できる位置
bisect.bisect,ソートされた順序を保ったまま{1}を{0}に挿入できる最後の位置
bisect.bisect,ソートされた順序を保ったまま{1}を{2}から{3}までの範囲で{0}に挿入できる位置
bisect.insort_left,{1}を{0}にソート順で挿入する
bisect.insort_right,{1}を{0}にソート順で最後に挿入する
bisect.insort,{1}を{0}にソート順で最後に挿入する
itertools,itertools
itertools.repeat,{}の無限列
itertools.repeat,{}の{}回続く列
itertools.count,無限の整数列
itertools.count,{}から始まる無限の整数列
itertools.count,{}から始まり{}間隔で続く無限の整数列
itertools.cycle,{}を無限に繰り返した列
itertools.product,{}と{}の直積
itertools.permutations,{}の順列
itertools.permutations,{}のうち{}個までの順列
itertools.combinations,{}のコンビネーション
itertools.combinations,{}の{}個までのコンビネーション
itertools.combinations_with_replacement,{}の重複コンビネーション
itertools.combinations_with_replacement,{}の{}個までの重複コンビネーション
functools,functools
functools.reduce,{1}を{0}で集約した列
functools.reduce,{1}を{2}を初期値として{0}で集約した列
collections,collections
collections.deque,{}の両端キュー
maxlen=,{}を最大長として
.appendleft,{}の先頭に{}を追加する
.extendleft,{}の先頭を{}で伸長する
.popleft(),{}の先頭から取り除いた値
.rotate,{}の要素を右にひとつ回転する
.rotate,{}の要素を右に{}個、回転する
collections.Counter,{}の辞書カウンタ
.most_common,{}の出現頻度順の列
.most_common,{}の上位{}個の出現頻度順の列
os,os
os.sep,ファイルパスのセパレータ記号
os.getcwd,現在の作業ディレクトリ
os.system,コマンド{}を実行する
os.path,os.path
os.path.basename,{}のファイル名
os.path.dirname,{}のディレクトリ名
os.path.abspath,{}の絶対ファイルパス
os.path.split,{}の(ディレクトリ名,ファイル名)
os.path.join,{}と{}を連結したファイルパス
os.path.splitext,{}の(ファイル名,拡張子)
os.path.get_size,ファイル{}の大きさ
sys,sys
sys.exit,プログラムを正常終了する
sys.exit,プログラムを状態{}で終了する
subprocess,subprocess
subprocess.call,コマンド{}を実行する
datetime,datetime
datetime.datetime,{}年{}月{}日の日時
datetime.datetime,{}年{}月{}日{}時{}分の日時
datetime.datetime,{}年{}月{}日{}時{}分{}秒の日時
datetime.datetime.now,現在の日時
.weekday,{}の週
.date,{}の日付
.strftime,日時{0}を書式{1}でフォーマットした文字列
datetime.datetime.strptime,{0}を書式{1}を用いて構文解析した日時
datetime.strptime,{0}を書式{1}を用いて構文解析した日時
.encode,{0}を文字コード{1}で復号化した文字列
.decode,{0}を文字コード{1}で符号化したバイト列
.decode,{0}を文字コード{1}で{2}ポリシーに基づき符号化したバイト列
math,math
math.ceil,{}の切り上げ整数値
math.comb,{}と{}のコンビネーション
math.copysign,{1}の符号を持った{0}
math.fabs,{}の絶対値
math.factorial,{}の階乗
math.floor,{}の切り捨て整数値
math.frexp,{}の(仮数,指数)
math.gcd,{}と{}の最大公約数
math.isclose,{}と{}が近いかどうか
math.isfinite,{}が有限かどうか
math.isinf,{}が無限大かどうか
math.isnan,{}がNaNかどうか
math.lcm,{}と{}の最小公倍数
math.modf,{}の(小数部,整数部)
math.perm
math.prod
math.remainder,{}を{}で割った剰余
math.exp,eの{}乗
math.expml$,$e^{}-1$
math.log,{}の自然対数
math.log,{1}を底とする{0}の対数
math.log1p
math.log2,2を底とする{0}の対数
math.log10,{}の常用対数
math.sqrt,{}の平方根
math.cos,{}の余弦
math.dist,{}と{}のユークリッド距離
math.hypot,{}と{}のノルム
math.sin,{}の正弦
math.tan,{}の正接
math.degrees,{}の角度
math.radians,{}のラジアン
math.acosh,{}の逆双曲線余弦
math.asinh,{}の逆双曲線正弦
math.atanh,{}の逆双曲線正接
math.cosh,{}の双曲線余弦
math.sinh,{}の双曲線正弦
math.tanh,{}の双曲線正接
math.gamma,{}のガンマ関数
math.lgamma,{}のガンマ関数の絶対値の自然対数
math.pi,円周率
math.e,ネイピア数
math.inf,無限大
math.nan,NaN
re.search,{1}において正規表現{0}が最初にマッチする位置
re.match,正規表現{0}を{1}にマッチさせた結果
re.fullmatch,{1}全体において正規表現{0}をマッチさせた結果
re.split,{1}を正規表現{0}で分割した文字列リスト
re.sub,{2}が正規表現{0}にマッチした箇所を{1}に置き換えた文字列
re.subn,{2}が正規表現{0}にマッチした箇所を{1}に置き換えた文字列の組
re.findall,{1}が正規表現{0}にマッチした文字列の列
re.compile,{}を正規表現にコンパイルした結果
flag=,{}オプションをつけて
#np
np.array,{}からの配列
dtype=,{}型の要素を用いて
#pd
.sum,{}の総和
pd.DataFrame,{}から作られた表データ
pd.read_csv,CSVファイル{}から読み込んだ表データ
pd.read_table,{}から読み込んだ表データ
names=,{}をカラム名として
index_col=,{}番目の列をインデックスとして
na_values=,{}を欠損値として
encoding=,エンコーディング{}を用いて
.astype,{}にしたがい型変換した表データ
axis=0,列方向に沿って
axis=1,行方向に沿って
pd.concat,{}を連結した表データ
ignore_index=True,インデックスを付け直しながら
index=,{}を新たなインデックスとして
pd.join,{}を結合した表データ
join='inner',内部ジョインとして
join='outer',外部ジョインとして



