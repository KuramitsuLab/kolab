
代入する=代入する|入れる

以下=以下|次|以降

繰り返す=繰り返す|ループする

プリントする = 表示する@2|出力する@2|プリントする

処理=処理|プログラム|命令

整数=整数|整数値|数|数値

増加させる=増加させる|大きくする|増やす
減少させる=減少させる|小さくする|減らす

とする=とする|代入する|入れる


sum = 0
sum(数値)に0を代入する

x ** 2   @check @calc
xの[2乗|二乗]

(x + y - 1) // y   @check @calc
xをyで割った結果の切り上げ

x % y   @check @calc
xをyで割った余り

x += y
xをyだけ増加させる

x -= y
xをyだけ減少させる

abs(x)   @check @calc
xの絶対値

math.sqrt(x)   @check @calc
xの平方根

math.ciel(x)   @check @calc
xの[小数点以下|]切り上げ

math.floor(x)   @check @calc
xの[小数点以下|]切り捨て

math.gcd(x, y)   @check @calc
xとyの最大公約数

max(x, y, x)   @check @calc
x、y、xの中で[一番大きい|もっとも大きい|最大の]値
x、y、zの最大値

min(x, y, z)   @check @calc
x、y、zの中で[一番小さい|もっとも小さい|最小の]値
x、y、zの最小値

for i in range(10):
[以下の処理を|]10回繰り返す
iに0から9を代入して、以下の処理を繰り返す

for i in range(len(a)):
[以下の処理を|]aの要素数分繰り返す

print(sum)
sumをプリントする

print(sum, end='')
改行なしでsumをプリントする

print('Hello World')
'Hello World'とプリントする
「[ハローワールド|こんにちは世界]」とプリントする
[試しに|]何か動かす
最初のプログラム

print('{:.5f}'.format(dist))
dist(浮動小数点数)の小数点以下5桁までをプリントする
dist(浮動小数点数)の小数点以下を5桁までプリントする

input()   @let:x
ユーザから入力を得る
入力値を[受け取る|得る]
{ユーザが入力した}文字列
{[ユーザから|]入力された}文字列

int(input())   @let: x
{ユーザが入力した}整数
整数を[入力値として|][受け取る|得る]
{[ユーザから|]入力された}整数

list(input())   @let: x
複数の入力値をリストとして[受け取る|得る]

list(map(int, input().split()))   @let: x
[空白ごとに|空白で区切って]入力された整数をリストとして受け取る

a, b, c = input().split()
入力された文字列を空白で分割し、a、b、c[とする]
[空白ごとに|空白で区切って]入力文字列を受け取り、a、b、c[とする]

a, b, c = map(int, input().split())
入力された整数を空白で分割し、a、b、cとする
[空白ごとに|空白で区切って]入力された整数を受け取り、a、b、cとする

float(x)
xを/浮動小数点数に[変換|]する
{xを変換した}浮動小数点数

int(x)
xを/整数に[変換|]する
{xを変換した}整数

a == b      @not @if @while
aとbが等しいかどうか
aがbと等しいかどうか
aがbかどうか

a > b      @not @if @while
aがbより大きいかどうか

a < b      @not @if @while
aがbより小さいかどうか

a >= b      @not @if @while
aがb以上かどうか

a <= b      @not @if @while
aがb以下かどうか

a % 2 == 0      @not @if @while
aが偶数かどうか

a % 2 == 1      @not @if @while
aが奇数かどうか

a % n == 0      @not @if @while
aがnの倍数かどうか
aがnで割り切れるかどうか

pass
何もしない
パスする

break
抜ける

if age < 6 or age >= 60:
[もし|]ageが6未満、[または]60以上[のとき]
[もし|]6才未満、[または]60才以上[のとき]

if age < 6 and age >= 60:
[もし|]ageが6未満、[かつ]60以上[のとき]

昇順に=昇順に|小さい順に|@5
降順に=降順に@2|大きい順に@2|逆順に
ソートする=整列する|並べる|並べ直す|並べ変える
ソートした=整列した|並べた|並べ直した|並べ変えた

sorted(a)
aを/[昇順に]ソートする
{aを/[昇順に]ソートした}列

sorted(a, reverse=True)
aを/[降順に]ソートする
{aを/[降順に]ソートした}列

a[0]
aの[0番目|先頭|最初][|の要素|の値]

a[-1]
aの末尾[|の要素|の値]

a[start:end]
aの一部分を取り出す
aのstart番目からend番目の[要素|値]を取り出す

a[start:]
aのstart番目から末尾までの[要素|値]を取り出す
aのstart番目以降の[要素|値]を取り出す

a[:end]
aの一部分を取り出す
aの先頭からend番目の[要素|値]を取り出す

a[::-1]
a(リスト)の逆順

len(a)   @check @calc
aの[長さ|要素数|個数]

sum(a)   @check @calc
a(数列)の合計[値|]
a(数列)の総和

min(a)   @check @calc
a(リスト)の最小値

max(a)   @check @calc
a(リスト)の最大値

sum(a)/len(a)   @check @calc
a(数列)の平均[値|]

range(n)
0からn-1までの数列

range(1, n+1)
1からnまでの数列

[]   @let: a
空のリスト[|を作る]

a.append(x)
a(リスト)にxを[追加する|加える|入れる]

a.pop()
a(リスト)の[末尾|最後尾]から[要素|値]を取り出す

a.pop(i)
a(リスト)のi番目から[要素|値]を取り出す

[0 for i in range(n)]   @let: a
n個の0が含まれるリスト

[i for i in range(1, 101)]   @let: a
1から100までの数が並んだリスト

s.replace(o, n)   @let: s2
s(文字列)内のoをnに置き換えた文字列

s.upper()   @let: s2
s(文字列)を英大文字に変換した文字列

s.lower()   @let: s2
s(文字列)を英小文字に変換した文字列

list(s)   @let: s2
s(文字列)の文字リスト

s.split(c)   @let: s2
s(文字列)をcで分割した文字列のリスト

s.count(x)   @check
s(文字列)[内]のxの出現回数

s.startswith(x)   @if
s(文字列)がxで始まるかどうか

s.endswith(x)   @if
s(文字列)がxで終わるかどうか

s.isupper()   @if
s(文字列)が英大文字かどうか

s.islower()   @if
s(文字列)が英小文字かどうか

s.isdigit()   @if
s(文字列)が数字かどうか
