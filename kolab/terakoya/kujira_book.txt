# 

プリントする=表示する|出力する

print("Hello World")
ハローワールドとプリントする
"Hello World"とプリントする
[試しに|]何か動かす
最初のプログラム

3+8
3足す8
3に8を加算する
3と8の和

1+2+3
1足す2足す3
1,2,3の和

100-70
100から70を引く

5 * 12
5かける12

10 / 5
10を5で割る

10 // 5
10を5で割った商

10 % 5
10を5で割った余り

10 ** 5
10の5乗

"abc" + "ABC"
[文字列|]"abc"と"ABC"を[連結する|結合する|繋ぐ]

str(1)
{[整数|]1を変換した}文字列
[整数|]1を文字列に[変換|]する

"X" * 3
[文字列|]"X"を3回繰り返す

x = input()
ユーザから入力を得る
{ユーザが入力した}文字列をxとする
{入力された}文字列

x = input("X")
{"X"というプロンプトを表示し、}ユーザに文字列を入力させる
{"X"という問い合わせに対し、}ユーザから入力を得る

浮動小数点数=実数|小数点数|数
整数=自然数|整数値|整数@2

float(x)
xを浮動小数点数に[変換|]する
{xを変換した}浮動小数点数

int(x)
xを整数に[変換|]する
{xを変換した}整数

x = int(input())
{ユーザが入力した}整数をxとする
{入力された}整数

x = float(input())
{ユーザが入力した}実数をxとする
{入力された}実数

type(x)
xの型を調べる

if a == b:
[もし|]aとbが等しい[とき|ならば]
[もし|]aとbが等しければ
[もし|]aがbと等しい[とき|ならば]
[もし|]aがbと等しければ

if a != b:
[もし|]aとbが等しくない[とき|ならば]
[もし|]aとbが等しくなければ

if a > b:
[もし|]aがbより大きい[とき|ならば]
[もし|]aがbより大きければ

if a >= b:
[もし|]aがb以上[のとき|ならば]

if a < b:
[もし|]aがbより小さい[とき|ならば]
[もし|]aがbより小さければ

if a <= b:
[もし|]aがb以下[のとき|ならば]

if a % 2 == 0:
[もし|]aが偶数[のとき|ならば]

if a % 2 == 1:
[もし|]aが奇数[のとき|ならば]

if a % n == 0:
[もし|]aがnの倍数[のとき|ならば]

if a % n != 0:
[もし|]aがnの倍数で[なければ|ないとき]

pass
何もしない
パスする

quit()
[プログラムを|Pythonを][途中で|]終了する
[プログラムを|Pythonを]中断する

True
真

False
偽

if age < 6 or age >= 60:
[もし|]ageが6未満、または60以上[のとき|ならば]
[もし|]ageが6未満、あるいは60以上[のとき|ならば]
[もし|]6才未満、または60才以上[のとき|ならば]
[もし|]6才未満、あるいは60才以上[のとき|ならば]

if age < 6 and age >= 60:
[もし|]ageが6未満、かつ、60以上[のとき|ならば]

weight / (height / 100) ** 2
BMIを求めたい
weightとheightからBMI[を求める|]

random.randint(1,6)
サイコロの[出目|目]
サイコロを振った[目|値]
1から6までの乱数

time.sleep(3)
3秒間、[Python|プログラム]の[動き|動作|実行]を停止する
3秒待つ
3秒止める

while True: pass
無限ループ
とりあえず、繰り返す

for i in range(5):
５回繰り返す

break
繰り返しを中断する
繰り返しから[強制的に|]抜け出す

continue
繰り返しの先頭に戻る
もう一回繰り返す

配列=リスト

[0] * n
大きさnの配列

for a in [1,2,3]:
リスト`[1,2,3]`の各要素を処理する
リスト`[1,2,3]`の要素を繰り返すたびにaに代入する

a.append(x)
[リスト|配列|] a の末尾にxを追加する

del(a[2])
[リスト|配列|] a から2番目の[要素|値]を削除する

a[start:end]
[リスト|配列|] a の一部分を取り出す

sum(a)
aの合計[値|]
aの総和

sum(a)/len(a)
aの平均[値|]
aの総和平均

random.suffle(a)
リストaをシャッフルする

d.keys()
[辞書|]dのキーの一覧[を得る|]

d[key]
[辞書|]dのキーkeyの[データ|値][を参照する|]

for key in d.keys(): value = d[key]
{[辞書|]dに入っている}[データ|値]を[一つずつ]処理する

math.ceil(x)
実数xの小数点以下を切り上げる
{xの小数点以下を切り上げた}整数

key in d
[辞書|]dに/キーkeyが含まれているかどうか

key not in date
[辞書|]dに/キーkeyが[ない|存在しない|含まれていない]かどうか

if key in d:
[もし|]辞書dに/キーkeyが含まれている[とき|ならば]

if key not in d:
[もし|]辞書dにキーkeyが含まれていない[とき|ならば]

除去する=取り除く

s.strip()
[文字列|]sの前後の空白を除去する
[文字列|]sの[余分な|]改行を除去する

s.split(',')
[文字列|]sを/カンマで区切る
{[文字列|]sを/カンマで分割した}文字列のリスト
[文字列|]sを/','で区切る
{[文字列|]sを/','で分割した}文字列のリスト

昇順に=昇順に|小さい順に|@5
降順に=降順に@2|大きい順に@2|逆順に
ソートする=整列する|並べる|並べ直す|並べ変える
ソートした=整列した|並べた|並べ直した|並べ変えた

sorted(a)
aを[昇順に]ソートする
{aを[昇順に]ソートした}列

sorted(a, reverse=True)
aを[降順に]ソートする
{aを[降順に]ソートした}列

datetime.date.today()
{[Python|プログラム]を実行した}日付
[本日|今日]の日付

datetime.date.today().year
{[Python|プログラム]を実行した}年
[本日|今日]の年

datetime.date.today().month
{[Python|プログラム]を実行した}月
[本日|今日]の月

datetime.date.today().day
{[Python|プログラム]を実行した}日
[本日|今日]の日

x.year
xの年

x.month
xの月

x.day
xの日

datetime.datetime.now()
{[Python|プログラム]を実行した}[タイムスタンプ|エポックタイム|エポック]
[本日|今日]の[タイムスタンプ|エポックタイム|エポック]

